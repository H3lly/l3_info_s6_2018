Grammar

    0 $accept: start $end

    1 start: E

    2 E: E '\n'
    3  | E '+' T
    4  | E '-' T
    5  | T

    6 T: T '*' F
    7  | T '/' F
    8  | F

    9 F: NUMBER
   10  | '(' E ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2
'(' (40) 10
')' (41) 10
'*' (42) 6
'+' (43) 3
'-' (45) 4
'/' (47) 7
error (256)
NUMBER (258) 9


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
start (12)
    on left: 1, on right: 0
E (13)
    on left: 2 3 4 5, on right: 1 2 3 4 10
T (14)
    on left: 6 7 8, on right: 3 4 5 6 7
F (15)
    on left: 9 10, on right: 6 7 8


State 0

    0 $accept: . start $end
    1 start: . E
    2 E: . E '\n'
    3  | . E '+' T
    4  | . E '-' T
    5  | . T
    6 T: . T '*' F
    7  | . T '/' F
    8  | . F
    9 F: . NUMBER
   10  | . '(' E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    start  go to state 3
    E      go to state 4
    T      go to state 5
    F      go to state 6


State 1

    9 F: NUMBER .

    $default  reduce using rule 9 (F)


State 2

    2 E: . E '\n'
    3  | . E '+' T
    4  | . E '-' T
    5  | . T
    6 T: . T '*' F
    7  | . T '/' F
    8  | . F
    9 F: . NUMBER
   10  | . '(' E ')'
   10  | '(' . E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 7
    T  go to state 5
    F  go to state 6


State 3

    0 $accept: start . $end

    $end  shift, and go to state 8


State 4

    1 start: E .  [$end]
    2 E: E . '\n'
    3  | E . '+' T
    4  | E . '-' T

    '\n'  shift, and go to state 9
    '+'   shift, and go to state 10
    '-'   shift, and go to state 11

    $default  reduce using rule 1 (start)


State 5

    5 E: T .  [$end, '\n', '+', '-', ')']
    6 T: T . '*' F
    7  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 5 (E)


State 6

    8 T: F .

    $default  reduce using rule 8 (T)


State 7

    2 E: E . '\n'
    3  | E . '+' T
    4  | E . '-' T
   10 F: '(' E . ')'

    '\n'  shift, and go to state 9
    '+'   shift, and go to state 10
    '-'   shift, and go to state 11
    ')'   shift, and go to state 14


State 8

    0 $accept: start $end .

    $default  accept


State 9

    2 E: E '\n' .

    $default  reduce using rule 2 (E)


State 10

    3 E: E '+' . T
    6 T: . T '*' F
    7  | . T '/' F
    8  | . F
    9 F: . NUMBER
   10  | . '(' E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    T  go to state 15
    F  go to state 6


State 11

    4 E: E '-' . T
    6 T: . T '*' F
    7  | . T '/' F
    8  | . F
    9 F: . NUMBER
   10  | . '(' E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    T  go to state 16
    F  go to state 6


State 12

    6 T: T '*' . F
    9 F: . NUMBER
   10  | . '(' E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    F  go to state 17


State 13

    7 T: T '/' . F
    9 F: . NUMBER
   10  | . '(' E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    F  go to state 18


State 14

   10 F: '(' E ')' .

    $default  reduce using rule 10 (F)


State 15

    3 E: E '+' T .  [$end, '\n', '+', '-', ')']
    6 T: T . '*' F
    7  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 3 (E)


State 16

    4 E: E '-' T .  [$end, '\n', '+', '-', ')']
    6 T: T . '*' F
    7  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 4 (E)


State 17

    6 T: T '*' F .

    $default  reduce using rule 6 (T)


State 18

    7 T: T '/' F .

    $default  reduce using rule 7 (T)
